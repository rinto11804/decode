basePath: /api/v1
definitions:
  types.Response-string:
    properties:
      data:
        type: string
      msg:
        type: string
    type: object
  types.Response-types_TaskModel:
    properties:
      data:
        $ref: '#/definitions/types.TaskModel'
      msg:
        type: string
    type: object
  types.TaskModel:
    properties:
      body:
        type: string
      created_at:
        type: string
      description:
        type: string
      handler:
        type: string
      id:
        type: string
      room_id:
        type: string
      title:
        type: string
    type: object
  user.LoginReq:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /decode/join/{roomId}:
    post:
      consumes:
      - application/json
      description: join the room with roomId
      operationId: join-room
      parameters:
      - description: Room ID
        in: path
        name: roomId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response-string'
      security:
      - Bearer: []
      summary: Join Room
      tags:
      - Room
  /decode/task/{taskId}:
    get:
      consumes:
      - application/json
      description: get task details by taskId
      operationId: get-task-details-by-id
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response-types_TaskModel'
      security:
      - Bearer: []
      summary: Get Task Details
      tags:
      - Task
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: loginInput
        required: true
        schema:
          $ref: '#/definitions/user.LoginReq'
      produces:
      - application/json
      responses: {}
      summary: User login
      tags:
      - User
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
